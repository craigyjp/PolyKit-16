//Values below are just for initialising and will be changed when synth is initialised to current panel controls & EEPROM settings
byte midiChannel = MIDI_CHANNEL_OMNI;//(EEPROM)
String patchNameU = INITPATCHNAME;
String patchNameL = INITPATCHNAME;
String patchName = INITPATCHNAME;
int upperpatchtag = 0;
int lowerpatchtag = 1;
byte splitPoint = 0;
byte oldsplitPoint = 0;
byte newsplitPoint = 0;
byte splitTrans = 0;
byte oldsplitTrans = 0;
int lowerTranspose = 0;
int newvalue = 0;

//Delayed LFO
int numberOfNotesU = 0;
int oldnumberOfNotesU = 0;
int numberOfNotesL = 0;
int oldnumberOfNotesL = 0;
unsigned long previousMillisL = 0;
unsigned long intervalL = 1; //10 seconds
long delaytimeL  = 0;
unsigned long previousMillisU = 0;
unsigned long intervalU = 1; //10 seconds
long delaytimeU  = 0;

boolean encCW = true;//This is to set the encoder to increment when turned CW - Settings Option
boolean announce = true;
// polykit parameters in order of mux

int pwLFO = 0;
int pwLFOU = 0;
int pwLFOL= 0;
float pwLFOstr = 0; // for display
int fmDepth = 0;
int fmDepthU = 0;
int fmDepthL = 0;
float fmDepthstr = 0;
int osc2PW = 0;
int osc2PWU = 0;
int osc2PWL = 0;
float osc2PWstr = 0;
int osc2PWM = 0;
int osc2PWMU = 0;
int osc2PWML = 0;
float osc2PWMstr = 0;
int osc1PW = 0;
int osc1PWU = 0;
int osc1PWL = 0;
float osc1PWstr = 0;
int osc1PWM = 0;
int osc1PWMU = 0;
int osc1PWML = 0;
float osc1PWMstr = 0;
int osc1Range = 0;
int osc1RangeU = 0;
int osc1RangeL = 0;
float osc1Rangestr = 0;
int oct1A = 0;
int oct1AU = 0;
int oct1AL = 0;
int oct1B = 0;
int oct1BU = 0;
int oct1BL = 0;
int osc2Range = 0;
int osc2RangeU = 0;
int osc2RangeL = 0;
float osc2Rangestr = 0;
int oct2A = 0;
int oct2AU = 0;
int oct2AL = 0;
int oct2B = 0;
int oct2BU = 0;
int oct2BL = 0;
int stack = 0;
int stackU = 0;
int stackL = 0;
int stackstr = 0;
int glideTime = 0;
int glideTimeU = 0;
int glideTimeL = 0;
float glideTimestr = 0;
int osc2Detune = 0;
int osc2DetuneU = 0;
int osc2DetuneL = 0;
float osc2Detunestr = 0;
int noiseLevel = 0;
int noiseLevelU = 0;
int noiseLevelL = 0;
float noiseLevelstr = 0;
float osc2SawLevelstr = 0;
int osc2SawLevel = 0;
int osc2SawLevelU = 0;
int osc2SawLevelL = 0;
int osc1SawLevel = 0;
int osc1SawLevelU = 0;
int osc1SawLevelL = 0;
float osc1SawLevelstr = 0;
int osc2PulseLevel = 0;
int osc2PulseLevelU = 0;
int osc2PulseLevelL = 0;
float osc2PulseLevelstr = 0;
int osc1PulseLevel = 0;
int osc1PulseLevelU = 0;
int osc1PulseLevelL = 0;
float osc1PulseLevelstr = 0;
int osc2TriangleLevel = 0;
int osc2TriangleLevelU = 0;
int osc2TriangleLevelL = 0;
float osc2TriangleLevelstr = 0; // for display
int osc1SubLevel = 0;
int osc1SubLevelU = 0;
int osc1SubLevelL = 0;
float osc1SubLevelstr = 0; // for display

int filterCutoff = 0;
int filterCutoffU = 0;
int filterCutoffL = 0;
int oldfilterCutoff = 0;
int oldfilterCutoffU = 0;
int oldfilterCutoffL = 0;
float filterCutoffstr = 0; // for display
int filterLFO = 0;
int filterLFOU = 0;
int filterLFOL = 0;
float filterLFOstr = 0; // for display
int filterRes = 0;
int filterResU = 0;
int filterResL = 0;
float filterResstr = 0;
int filterTypeU = 0;
int filterTypeL = 0;
int filterEGlevel = 0;
int filterEGlevelU = 0;
int filterEGlevelL = 0;
float filterEGlevelstr = 0;
int LFORate = 0;
int LFORateU = 0;
int LFORateL = 0;
float LFORatestr = 0; //for display
int LFODelay = 0;
int LFODelayU = 0;
int LFODelayL = 0;
int LFODelayGoU = 0;
int LFODelayGoL = 0;
float LFODelaystr = 0; //for display
String StratusLFOWaveform = "                ";
int LFOWaveformstr = 0;
int LFOWaveform = 0;
int LFOWaveformU = 0;
int LFOWaveformL = 0;
int filterAttack = 0;
int filterAttackU = 0;
int filterAttackL = 0;
float filterAttackstr = 0;
int filterDecay = 0;
int filterDecayU = 0;
int filterDecayL = 0;
float filterDecaystr = 0;
int filterSustain = 0;
int filterSustainU = 0;
int filterSustainL = 0;
float filterSustainstr = 0;
int filterRelease = 0;
int filterReleaseU = 0;
int filterReleaseL = 0;
float filterReleasestr = 0;
int ampAttack = 0;
int ampAttackU = 0;
int ampAttackL = 0;
int oldampAttack = 0;
int oldampAttackU = 0;
int oldampAttackL = 0;
float ampAttackstr = 0;
int ampDecay = 0;
int ampDecayU = 0;
int ampDecayL = 0;
int oldampDecay = 0;
int oldampDecayU = 0;
int oldampDecayL = 0;
float ampDecaystr = 0;
int ampSustain = 0;
int ampSustainU = 0;
int ampSustainL = 0;
int oldampSustain = 0;
int oldampSustainU = 0;
int oldampSustainL = 0;
float ampSustainstr = 0;
int ampRelease = 0;
int ampReleaseU = 0;
int ampReleaseL = 0;
int oldampRelease = 0;
int oldampReleaseU = 0;
int oldampReleaseL = 0;
int ampReleasestr = 0;
int volumeControl = 0;
int volumeControlU = 0;
int volumeControlL = 0;
float volumeControlstr = 0; // for display
int amDepth = 0;
int amDepthU = 0;
int amDepthL = 0;
float amDepthstr = 0; // for display
int keytrack = 0;
int keytrackU = 0;
int keytrackL = 0;
float keytrackstr = 0;
int keyTrackSW = 0;
int keyTrackSWU = 0;
int keyTrackSWL = 0;

int pitchBendRange = 0;
int PitchBendLevel = 0;
int PitchBendLevelU = 0;
int PitchBendLevelL = 0;
int PitchBendLevelstr = 0; // for display
int modWheelDepth = 0;
int modWheelDepthU = 0;
int modWheelDepthL = 0;
int modWheelLevel = 0;
int modWheelLevelU = 0;
int modWheelLevelL = 0;
float modWheelLevelstr = 0;

int glideSW = 0;
int glideSWU = 0;
int glideSWL = 0;
int vcaLoop = 0;
int statevcaLoop = 0;
int oldvcaLoop = 0;
int vcaLoopU = 0;
int statevcaLoopU = 0;
int oldvcaLoopU = 0;
int vcaLoopL = 0;
int statevcaLoopL = 0;
int oldvcaLoopL = 0;
int vcadoubleLoop = 0;
int vcadoubleLoopU = 0;
int vcadoubleLoopL = 0;
int vcaVel = 0;
int vcaVelU = 0;
int vcaVelL = 0;
int vcaGate = 0;
int vcaGateU = 0;
int vcaGateL = 0;
int chorus1 = 0;
int chorus1U = 0;
int chorus1L = 0;
int chorus2 = 0;
int chorus2U = 0;
int chorus2L = 0;
int lfoAlt = 0;
int lfoAltU = 0;
int lfoAltL = 0;
int monoMulti = 0;
int monoMultiU = 0;
int monoMultiL = 0;
int oldmonoMultiU = 0;
int oldmonoMultiL = 0;
int filterPoleSWU = 0;
int filterPoleSWL = 0;
int filterPoleSW = 0;
int filterVel = 0;
int filterVelU = 0;
int filterVelL = 0;
int filterLoop = 0;
int statefilterLoop = 0;
int oldfilterLoop = 0;
int filterLoopU = 0;
int statefilterLoopU = 0;
int oldfilterLoopU = 0;
int filterLoopL = 0;
int statefilterLoopL = 0;
int oldfilterLoopL = 0;
int filterdoubleLoop = 0;
int filterdoubleLoopU = 0;
int filterdoubleLoopL = 0;
int filterEGinv = 0;
int filterEGinvU = 0;
int filterEGinvL = 0;
int upperSW = 0;
int oldupperSW = 0;
int filterLogLin = 0;
int filterLogLinU = 0;
int filterLogLinL = 0;
int ampLogLin = 0;
int ampLogLinU = 0;
int ampLogLinL = 0;

int afterTouch = 0;
int afterTouchU = 0;
int afterTouchL = 0;
int AfterTouchDest = 0;
int AfterTouchDestU = 0;
int oldAfterTouchDestU = 0;
int AfterTouchDestL = 0;
int oldAfterTouchDestL = 0;
int oldfilterLogLinU;
int oldfilterLogLinL;
int oldampLogLinU;
int oldampLogLinL;
int oldkeyTrackSWU;
int oldkeyTrackSWL;

boolean wholemode = true;
boolean dualmode = false;
boolean splitmode = false;

int returnvalue = 0;
